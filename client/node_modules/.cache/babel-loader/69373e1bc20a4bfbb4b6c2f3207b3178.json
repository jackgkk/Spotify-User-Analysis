{"ast":null,"code":"var _jsxFileName = \"/home/jackgkk/UL/LicenceProject/SpotifyAnalysis/client/src/Pages/ListPage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TrackCard from '../../Components/TrackCard';\nimport { Artist, Track } from '../../types';\nimport './index.scss';\nimport Line from \"../../assets/yellowLine.svg\";\nimport ArtistCard from '../../Components/ArtistCard';\nimport { useHistory } from 'react-router';\nimport apiMethods from '../../api/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isTrack = x => x.type === 'tracks';\n\nconst isArtist = x => x.type === 'artists';\n\nexport default function ListPage({\n  token,\n  fetchRefreshToken,\n  type\n}) {\n  _s();\n\n  const history = useHistory();\n  const [timeRange, setTimeRange] = React.useState('short_term');\n  const [listItems, setListItems] = React.useState(['null']);\n  const buttonsRef = React.useRef();\n  React.useEffect(() => {\n    if (token) {\n      apiMethods.fetchTopItems(timeRange, token, type).then(res => handleErrors(res)).then(res => {\n        handleSuccess(res);\n        console.log(listItems);\n      }).catch(err => console.error(err));\n    } else history.push('/');\n\n    switch (timeRange) {\n      case 'short_term':\n        if (buttonsRef.current) buttonsRef.current.firstChild.id = 'activated';\n    }\n  }, [token, type, timeRange]);\n\n  function handleErrors(res) {\n    if (!res.ok) {\n      if (res.status === 401) {\n        res.json().then(res => {\n          if (res.message && res.message === 'invalid token') {\n            fetchRefreshToken();\n          } else {\n            console.error('Error while fetching list data', res);\n          }\n        });\n      } else {\n        console.error('Error while fetching list data');\n      }\n    } else return res.json();\n  }\n\n  function handleSuccess(res) {\n    console.log(res);\n\n    if (type === 'tracks') {\n      setListItems(res.map(e => new Track(e.id, e.position, e.name, e.artists, e.durationMs, e.url, e.image, e.previewUrl)));\n    } else if (type === 'artists') {\n      setListItems(res.map(e => new Artist(e.id, e.position, e.name, e.genres, e.followers, e.url, e.image)));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"underlineText\",\n        children: [\"List of \", isTrack(listItems[0]) ? 'Tracks' : 'Artists', /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Line,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), isTrack(listItems[0]) ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tracks that were popular among your ears in the last:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Artists you couldn\\u2019t get enough of in the last:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"switchBtns\",\n        ref: buttonsRef,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"switchButton\",\n          onClick: () => setTimeRange('short_term'),\n          children: \"1 month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"switchButton\",\n          onClick: () => setTimeRange('medium_term'),\n          children: \"6 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"switchButton\",\n          onClick: () => setTimeRange('long_term'),\n          children: \"All time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listWrap\",\n      children: listItems.length > 0 ? listItems.map(e => {\n        if (isTrack(e)) {\n          return /*#__PURE__*/_jsxDEV(TrackCard, {\n            track: e\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 22\n          }, this);\n        } else if (isArtist(e)) {\n          return /*#__PURE__*/_jsxDEV(ArtistCard, {\n            artist: e\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 22\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Error Happened\"\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 20\n        }, this);\n      }) : 'no data'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListPage, \"b66WjdnUIq29bzs3R3RaUIsy1rw=\", false, function () {\n  return [useHistory];\n});\n\n_c = ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["/home/jackgkk/UL/LicenceProject/SpotifyAnalysis/client/src/Pages/ListPage/index.tsx"],"names":["React","TrackCard","Artist","Track","ArtistCard","useHistory","apiMethods","isTrack","x","type","isArtist","ListPage","token","fetchRefreshToken","history","timeRange","setTimeRange","useState","listItems","setListItems","buttonsRef","useRef","useEffect","fetchTopItems","then","res","handleErrors","handleSuccess","console","log","catch","err","error","push","current","firstChild","id","ok","status","json","message","map","e","position","name","artists","durationMs","url","image","previewUrl","genres","followers","Line","length","Math","random"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport TrackCard from '../../Components/TrackCard'\nimport { Artist, Track } from '../../types'\nimport './index.scss'\nimport Line from '../../assets/yellowLine.svg'\nimport ArtistCard from '../../Components/ArtistCard'\nimport { artistType, trackType } from '../../navigation'\nimport { useHistory, useLocation } from 'react-router'\nimport apiMethods from '../../api/index'\n\ninterface ListPageProps {\n  token: String | null\n  fetchRefreshToken: () => void\n  type: String\n}\n\nconst isTrack = (x: any): x is trackType => x.type === 'tracks'\nconst isArtist = (x: any): x is artistType => x.type === 'artists'\n\nexport default function ListPage ({\n  token,\n  fetchRefreshToken,\n  type\n}: ListPageProps) {\n  const history = useHistory()\n  const [timeRange, setTimeRange] = React.useState('short_term')\n  const [listItems, setListItems] = React.useState(['null'])\n  const buttonsRef = React.useRef()\n\n  React.useEffect(() => {\n    if (token) {\n      apiMethods\n        .fetchTopItems(timeRange, token, type)\n        .then(res => handleErrors(res))\n        .then(res => {\n          handleSuccess(res)\n          console.log(listItems)\n        })\n        .catch(err => console.error(err))\n    } else history.push('/')\n\n    switch (timeRange) {\n      case 'short_term':\n        if (buttonsRef.current) buttonsRef.current!.firstChild.id = 'activated'\n    }\n  }, [token, type, timeRange])\n\n  function handleErrors (res: any) {\n    if (!res.ok) {\n      if (res.status === 401) {\n        res.json().then((res: { message: string }) => {\n          if (res.message && res.message === 'invalid token') {\n            fetchRefreshToken()\n          } else {\n            console.error('Error while fetching list data', res)\n          }\n        })\n      } else {\n        console.error('Error while fetching list data')\n      }\n    } else return res.json()\n  }\n\n  function handleSuccess (res: any) {\n    console.log(res)\n    if (type === 'tracks') {\n      setListItems(\n        res.map(\n          (e: Track) =>\n            new Track(\n              e.id,\n              e.position,\n              e.name,\n              e.artists,\n              e.durationMs,\n              e.url,\n              e.image,\n              e.previewUrl\n            )\n        )\n      )\n    } else if (type === 'artists') {\n      setListItems(\n        res.map(\n          (e: Artist) =>\n            new Artist(\n              e.id,\n              e.position,\n              e.name,\n              e.genres,\n              e.followers,\n              e.url,\n              e.image\n            )\n        )\n      )\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"headerDiv\">\n        <h2 id=\"underlineText\">\n          List of {isTrack(listItems[0]) ? 'Tracks' : 'Artists'}\n          <img src={Line} alt=\"\" />\n        </h2>\n        {isTrack(listItems[0])\n          ? (\n          <p>Tracks that were popular among your ears in the last:</p>\n            )\n          : (\n          <p>Artists you couldn’t get enough of in the last:</p>\n            )}\n\n        <div className=\"switchBtns\" ref={buttonsRef}>\n          <button\n            className=\"switchButton\"\n            onClick={() => setTimeRange('short_term')}\n          >\n            1 month\n          </button>\n          <button\n            className=\"switchButton\"\n            onClick={() => setTimeRange('medium_term')}\n          >\n            6 months\n          </button>\n          <button\n            className=\"switchButton\"\n            onClick={() => setTimeRange('long_term')}\n          >\n            All time\n          </button>\n        </div>\n      </div>\n\n      <div className=\"listWrap\">\n        {listItems.length > 0\n          ? listItems.map(e => {\n            if (isTrack(e)) {\n              return <TrackCard key={Math.random()} track={e} />\n            } else if (isArtist(e)) {\n              return <ArtistCard key={Math.random()} artist={e} />\n            }\n\n            return <div key=\"1\">Error Happened</div>\n          })\n          : 'no data'}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}