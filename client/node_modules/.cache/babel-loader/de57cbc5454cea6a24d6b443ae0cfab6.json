{"ast":null,"code":"var _jsxFileName = \"/home/jackgkk/UL/LicenceProject/SpotifyAnalysis/client/src/Pages/ListPage/index.tsx\";\nimport * as React from 'react';\nimport TrackCard from '../../Components/TrackCard';\nimport './index.scss';\nimport Line from \"../../assets/yellowLine.svg\";\nimport ArtistCard from '../../Components/ArtistCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListPage({\n  listItems\n}) {\n  const isTrack = x => x.type === 'track';\n\n  const isArtist = x => x.type === 'artist';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"underlineText\",\n        children: [\"List of \", isTrack(listItems[0]) ? 'Tracks' : 'Artists', /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Line,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), isTrack(listItems[0]) ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tracks that were popular among your ears in the last:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Artists you couldn\\u2019t get enough of in the last:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"switchBtns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"switchButton\",\n          children: \"1 month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"switchButton\",\n          children: \"6 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"switchButton\",\n          children: \"All time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listWrap\",\n      children: listItems.map(e => {\n        if (isTrack(e)) {\n          return /*#__PURE__*/_jsxDEV(TrackCard, {\n            track: e\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }, this);\n        } else if (isArtist(e)) {\n          return /*#__PURE__*/_jsxDEV(ArtistCard, {\n            artist: e\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 20\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Error Happened\"\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["/home/jackgkk/UL/LicenceProject/SpotifyAnalysis/client/src/Pages/ListPage/index.tsx"],"names":["React","TrackCard","ArtistCard","ListPage","listItems","isTrack","x","type","isArtist","Line","map","e","Math","random"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAO,cAAP;;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;;AAOA,eAAe,SAASC,QAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAiD;AAC9D,QAAMC,OAAO,GAAIC,CAAD,IAA4BA,CAAC,CAACC,IAAF,KAAW,OAAvD;;AACA,QAAMC,QAAQ,GAAIF,CAAD,IAA6BA,CAAC,CAACC,IAAF,KAAW,QAAzD;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC,eAAP;AAAA,+BACWF,OAAO,CAACD,SAAS,CAAC,CAAD,CAAV,CAAP,GAAwB,QAAxB,GAAmC,SAD9C,eAEE;AAAK,UAAA,GAAG,EAAEK,IAAV;AAAgB,UAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGJ,OAAO,CAACD,SAAS,CAAC,CAAD,CAAV,CAAP,gBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAaE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGA,SAAS,CAACM,GAAV,CAAcC,CAAC,IAAI;AAClB,YAAIN,OAAO,CAACM,CAAD,CAAX,EAAgB;AACd,8BAAO,QAAC,SAAD;AAA+B,YAAA,KAAK,EAAEA;AAAtC,aAAgBC,IAAI,CAACC,MAAL,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD,MAEO,IAAIL,QAAQ,CAACG,CAAD,CAAZ,EAAiB;AACtB,8BAAO,QAAC,UAAD;AAAgC,YAAA,MAAM,EAAEA;AAAxC,aAAiBC,IAAI,CAACC,MAAL,EAAjB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AAED,4BAAO;AAAA;AAAA,WAAS,GAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OARA;AADH;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;KAtCuBV,Q","sourcesContent":["import * as React from 'react'\nimport TrackCard from '../../Components/TrackCard'\nimport { Artist, Track } from '../../types'\nimport './index.scss'\nimport Line from '../../assets/yellowLine.svg'\nimport ArtistCard from '../../Components/ArtistCard'\nimport { artistType, trackType } from '../../navigation'\n\ninterface ListPageProps {\n  listItems: (Track | Artist)[]\n}\n\nexport default function ListPage ({ listItems }: ListPageProps) {\n  const isTrack = (x: any): x is trackType => x.type === 'track'\n  const isArtist = (x: any): x is artistType => x.type === 'artist'\n  return (\n    <div className=\"container\">\n      <div className=\"headerDiv\">\n        <h2 id=\"underlineText\">\n          List of {isTrack(listItems[0]) ? 'Tracks' : 'Artists'}\n          <img src={Line} alt=\"\" />\n        </h2>\n        {isTrack(listItems[0])\n          ? (\n          <p>Tracks that were popular among your ears in the last:</p>\n            )\n          : (\n          <p>Artists you couldnâ€™t get enough of in the last:</p>\n            )}\n\n        <div className=\"switchBtns\">\n          <button className=\"switchButton\">1 month</button>\n          <button className=\"switchButton\">6 months</button>\n          <button className=\"switchButton\">All time</button>\n        </div>\n      </div>\n\n      <div className=\"listWrap\">\n        {listItems.map(e => {\n          if (isTrack(e)) {\n            return <TrackCard key={Math.random()} track={e} />\n          } else if (isArtist(e)) {\n            return <ArtistCard key={Math.random()} artist={e} />\n          }\n\n          return <div key=\"1\">Error Happened</div>\n        })}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}