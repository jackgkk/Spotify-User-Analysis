{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gukal\\\\Desktop\\\\Studying\\\\Licence Work\\\\Spotify-User-Analysis\\\\client\\\\src\\\\Components\\\\ArtistCard\\\\index.tsx\";\nimport * as React from 'react';\nimport Plus from \"../../assets/PlusButton.svg\";\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ranges = [{\n  divider: 1e6,\n  suffix: 'M'\n}, {\n  divider: 1e3,\n  suffix: 'K'\n}];\n\nfunction roundToTwo(num) {\n  const newNum = num + 'e+1';\n  return +(Math.round(parseFloat(newNum)) + 'e-1');\n}\n\nfunction formatNumber(n) {\n  for (let i = 0; i < ranges.length; i++) {\n    if (n >= ranges[i].divider) {\n      return roundToTwo(n / ranges[i].divider).toString() + ranges[i].suffix;\n    }\n  }\n\n  return n.toString();\n}\n\nexport default function ArtistCard({\n  artist\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artistCard-component\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"positionNumber\",\n        children: artist.position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imageDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: artist.image,\n            alt: \"\",\n            id: \"albumImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: artist.image,\n            alt: \"\",\n            id: \"albumImageBlured\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"glassDiv\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: artist.genres.map(e => {\n                if (artist.genres.indexOf(e) !== artist.genres.length - 1) {\n                  return e + ', ';\n                }\n\n                return e;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"followers\",\n                children: formatNumber(artist.followers)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), ' ', \"followers\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footerButtons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bareBtn openBtn\",\n              children: \"open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bareBtn plusBtn \",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Plus,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = ArtistCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistCard\");","map":{"version":3,"sources":["C:/Users/gukal/Desktop/Studying/Licence Work/Spotify-User-Analysis/client/src/Components/ArtistCard/index.tsx"],"names":["React","ranges","divider","suffix","roundToTwo","num","newNum","Math","round","parseFloat","formatNumber","n","i","length","toString","ArtistCard","artist","position","image","name","genres","map","e","indexOf","followers","Plus"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport { FunctionExpression } from 'typescript'\r\nimport { Artist } from '../../types'\r\nimport artists from './data'\r\nimport Plus from '../../assets/PlusButton.svg'\r\nimport './index.scss'\r\n\r\ninterface ArtistCardProps {\r\n  artist: Artist\r\n}\r\n\r\nconst ranges = [\r\n  { divider: 1e6, suffix: 'M' },\r\n  { divider: 1e3, suffix: 'K' }\r\n]\r\n\r\nfunction roundToTwo (num: number) {\r\n  const newNum = num + 'e+1'\r\n  return +(Math.round(parseFloat(newNum)) + 'e-1')\r\n}\r\n\r\nfunction formatNumber (n: number) {\r\n  for (let i = 0; i < ranges.length; i++) {\r\n    if (n >= ranges[i].divider) {\r\n      return roundToTwo(n / ranges[i].divider).toString() + ranges[i].suffix\r\n    }\r\n  }\r\n  return n.toString()\r\n}\r\n\r\nexport default function ArtistCard ({ artist }: ArtistCardProps) {\r\n  return (\r\n    <div className=\"artistCard-component\">\r\n      <div className=\"cardContainer\">\r\n        <p className=\"positionNumber\">{artist.position}</p>\r\n        <div className=\"cardWrap\">\r\n          <div className=\"imageDiv\">\r\n            <img src={artist.image} alt=\"\" id=\"albumImage\" />\r\n          </div>\r\n          <div className=\"mainContent\">\r\n            <img src={artist.image} alt=\"\" id=\"albumImageBlured\" />\r\n            <div className=\"glassDiv\"></div>\r\n            <div className=\"textWrap\">\r\n              <h4>{artist.name}</h4>\r\n              <p>\r\n                {artist.genres.map(e => {\r\n                  if (artist.genres.indexOf(e) !== artist.genres.length - 1) {\r\n                    return e + ', '\r\n                  }\r\n\r\n                  return e\r\n                })}\r\n              </p>\r\n              <p>\r\n                <span id=\"followers\">{formatNumber(artist.followers)}</span>{' '}\r\n                followers\r\n              </p>\r\n            </div>\r\n            <div className=\"footerButtons\">\r\n              <button className=\"bareBtn openBtn\">open</button>\r\n              <button className=\"bareBtn plusBtn \">\r\n                <img src={Plus} alt=\"\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}